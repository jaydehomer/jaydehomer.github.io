[
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "CV/Contact",
    "section": "",
    "text": "Click here to download my CV."
  },
  {
    "objectID": "contact.html#contact-info",
    "href": "contact.html#contact-info",
    "title": "CV/Contact",
    "section": "Contact Info",
    "text": "Contact Info\nemail: jayde dot homer at gmail dot com\nuni email: jaydehomer at wustl dot edu\nIf you can’t find me, check my local bookstores: Left Bank Books or Subteranean."
  },
  {
    "objectID": "posts/edtech/index.html",
    "href": "posts/edtech/index.html",
    "title": "Parameterized Reports for Department Use of Ed. Tech.",
    "section": "",
    "text": "To evaluate student and faculty use of licensed technologies at Wash U, I used R Markdown to create a series of parameterized reports that provide engagement insights over desired departments, semesters, metrics, and tools."
  },
  {
    "objectID": "posts/diss/index.html",
    "href": "posts/diss/index.html",
    "title": "Understanding Patterns in Preschoolers’ Spellings",
    "section": "",
    "text": "In my dissertation I am identifying patterns that drive spellings before children have learned to spell. For example, children tend to use letters that are more frequently talked about, letters from their name, and letters that are at the beginning of the alphabet.\n\nI even presented on my first study at the Graduate Student Research Symposium in April 2023. Here’s me discussing my findings with a judge!"
  },
  {
    "objectID": "posts/eRas/index.html",
    "href": "posts/eRas/index.html",
    "title": "the eras touR",
    "section": "",
    "text": "Can I ask you a question? Have you ever wondered which of Taylor Swift’s songs are the most danceable? Which songs are saddest? Slowest? Lowest? Well, if the answer is no, you’re playing a stupid game and you’ve won a stupid prize – leave now. Assuming the answer to any of those questions was an incredibly enthusiastic YES, then you’re the lucky one.\nSo, R you ready for it?\nDISCLAIMER: Obviously I’m a very busy important person so I’m not going to answer ALL of your questions today, but I’ll try my very best to keep coming back and working on this, so please come back and check it out.\nHere are the packages we’ll be using."
  },
  {
    "objectID": "posts/eRas/index.html#spotify-api",
    "href": "posts/eRas/index.html#spotify-api",
    "title": "the eras touR",
    "section": "Spotify API",
    "text": "Spotify API\nUsing (Spotify’s Web API)[https://developer.spotify.com/documentation/web-api], we can access all sorts of fun information about an artist. If you’re following along at home and wondering if this is the explicit version with all those Xs below, no. I’m just avoiding giving you my super secret client_id and client_secret. You can get your own by visiting your Spotify developer dashboard.\n\n# albums we/I don't want included in the data\new_david <- c(\"Live From Clear Channel Stripped 2008\", \n               \"Speak Now World Tour Live\",\n              \"reputation Stadium Tour Surprise Song Playlist\")\n\n\n#Sys.setenv(SPOTIFY_CLIENT_ID = 'XXXXXXXXXXXX')\n#Sys.setenv(SPOTIFY_CLIENT_SECRET = 'XXXXXXXXXXXX')\naccess_token <- get_spotify_access_token()\nswifty <- get_artist_audio_features('taylor swift') |> \n  # filter out albums we don't want\n  filter(!album_name %in% ew_david) |> \n  # clean up album names\n  mutate(album_name_og = album_name,\n         album_edition = str_extract_all(album_name, \n                                         \"\\\\([^()]+\\\\)|Platinum Edition|\\\\:+(\\\\D+)\", \n                                         simplify = TRUE),\n         album_edition = if_else(nchar(album_edition) != 0,\n                                 str_remove_all(album_edition, \"\\\\(|\\\\)|\\\\:\"),\n                                 \"original\"),\n         album_name = str_squish(str_remove_all(album_name, \n                                                \"\\\\([^()]+\\\\)|Platinum Edition|\\\\:+(\\\\D+)\")))\n\nTo give you an idea of the sort of information we now have at our fingertips, here’s an example row of data, for everyone’s favorite song:\n\nswifty |> \n  filter(track_name == \n           \"All Too Well (10 Minute Version) (Taylor's Version) (From The Vault)\") |> \n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nartist_name\nartist_id\nalbum_id\nalbum_type\nalbum_images\nalbum_release_date\nalbum_release_year\nalbum_release_date_precision\ndanceability\nenergy\nkey\nloudness\nmode\nspeechiness\nacousticness\ninstrumentalness\nliveness\nvalence\ntempo\ntrack_id\nanalysis_url\ntime_signature\nartists\navailable_markets\ndisc_number\nduration_ms\nexplicit\ntrack_href\nis_local\ntrack_name\ntrack_preview_url\ntrack_number\ntype\ntrack_uri\nexternal_urls.spotify\nalbum_name\nkey_name\nmode_name\nkey_mode\nalbum_name_og\nalbum_edition\n\n\n\n\nTaylor Swift\n06HL4z0CvFAxyc27GXpf02\n6kZ42qRrzov54LcAk4onW9\nalbum\n640 , 300 , 64 , https://i.scdn.co/image/ab67616d0000b273318443aab3531a0558e79a4d, https://i.scdn.co/image/ab67616d00001e02318443aab3531a0558e79a4d, https://i.scdn.co/image/ab67616d00004851318443aab3531a0558e79a4d, 640 , 300 , 64\n2021-11-12\n2021\nday\n0.631\n0.518\n0\n-8.771\n1\n0.0303\n0.274\n0\n0.088\n0.205\n93.023\n5enxwA8aAbwZbf5qCHORXi\nhttps://api.spotify.com/v1/audio-analysis/5enxwA8aAbwZbf5qCHORXi\n4\nhttps://api.spotify.com/v1/artists/06HL4z0CvFAxyc27GXpf02, 06HL4z0CvFAxyc27GXpf02 , Taylor Swift , artist , spotify:artist:06HL4z0CvFAxyc27GXpf02 , https://open.spotify.com/artist/06HL4z0CvFAxyc27GXpf02\nAR, AU, AT, BE, BO, BR, BG, CA, CL, CO, CR, CY, CZ, DK, DO, DE, EC, EE, SV, FI, FR, GR, GT, HN, HK, HU, IS, IE, IT, LV, LT, LU, MY, MT, MX, NL, NZ, NI, NO, PA, PY, PE, PH, PL, PT, SG, SK, ES, SE, CH, TW, TR, UY, US, GB, AD, LI, MC, ID, JP, TH, VN, RO, IL, ZA, SA, AE, BH, QA, OM, KW, EG, MA, DZ, TN, LB, JO, PS, IN, BY, KZ, MD, UA, AL, BA, HR, ME, MK, RS, SI, KR, BD, PK, LK, GH, KE, NG, TZ, UG, AG, AM, BS, BB, BZ, BT, BW, BF, CV, CW, DM, FJ, GM, GE, GD, GW, GY, HT, JM, KI, LS, LR, MW, MV, ML, MH, FM, NA, NR, NE, PW, PG, WS, SM, ST, SN, SC, SL, SB, KN, LC, VC, SR, TL, TO, TT, TV, VU, AZ, BN, BI, KH, CM, TD, KM, GQ, SZ, GA, GN, KG, LA, MO, MR, MN, NP, RW, TG, UZ, ZW, BJ, MG, MU, MZ, AO, CI, DJ, ZM, CD, CG, IQ, LY, TJ, VE, ET, XK\n1\n613026\nTRUE\nhttps://api.spotify.com/v1/tracks/5enxwA8aAbwZbf5qCHORXi\nFALSE\nAll Too Well (10 Minute Version) (Taylor’s Version) (From The Vault)\nNA\n30\ntrack\nspotify:track:5enxwA8aAbwZbf5qCHORXi\nhttps://open.spotify.com/track/5enxwA8aAbwZbf5qCHORXi\nRed\nC\nmajor\nC major\nRed (Taylor’s Version)\nTaylor’s Version"
  },
  {
    "objectID": "posts/eRas/index.html#summary",
    "href": "posts/eRas/index.html#summary",
    "title": "the eras touR",
    "section": "Summary",
    "text": "Summary\nYou may already know this, but here’s a summary of Taylor’s discography.\n\nAll TimeBy Album\n\n\n\n\n\n\n\nname\nvalue\nFast Fact\n\n\n\n\nNumber of Songs\n258\nNumber of Songs\n\n\nAlbums Released\n10\nAlbums Released\n\n\nEarliest Release\n2006\nEarliest Release\n\n\nMost Recent Release\n2023\nMost Recent Release\n\n\nSongs Featuring Other Artists\n25\nSongs Featuring Other Artists\n\n\nSongs with Explicit Labels\n54\nSongs with Explicit Labels\n\n\nShortest Song Minutes\n1.79\nShortest Song Minutes\n\n\nLongest Song Minutes\n10.22\nLongest Song Minutes\n\n\nAverage Song Minutes\n3.96\nAverage Song Minutes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlbum\nNumber of Songs\nRelease Year\nSongs Featuring Other Artists\nSongs with Explicit Labels\nShortest Song (Minutes)\nLongest Song (Minutes)\nAverage Song (Minutes)\n\n\n\n\nTaylor Swift\n15\n2006\n0\n0\n2.88\n4.14\n3.57\n\n\nFearless\n13\n2008\n0\n0\n3.34\n4.91\n4.12\n\n\nFearless Platinum Edition\n19\n2008\n0\n0\n3.34\n5.18\n4.18\n\n\nSpeak Now\n14\n2010\n0\n0\n3.62\n6.73\n4.79\n\n\nSpeak Now (Deluxe Edition)\n20\n2010\n0\n0\n3.62\n6.73\n4.59\n\n\nRed\n16\n2012\n0\n0\n3.20\n5.46\n4.06\n\n\nRed (Deluxe Edition)\n22\n2012\n0\n0\n3.20\n5.46\n4.10\n\n\n1989\n13\n2014\n0\n0\n3.22\n4.52\n3.75\n\n\n1989 (Deluxe Edition)\n19\n2014\n0\n0\n1.79\n4.52\n3.62\n\n\nreputation\n15\n2017\n0\n0\n3.39\n4.08\n3.72\n\n\nLover\n18\n2019\n2\n0\n2.51\n4.89\n3.44\n\n\nevermore\n15\n2020\n3\n6\n3.01\n5.25\n4.05\n\n\nfolklore\n16\n2020\n1\n5\n3.18\n4.91\n3.98\n\n\nfolklore (deluxe version)\n17\n2020\n1\n5\n3.18\n4.91\n3.95\n\n\nfolklore: the long pond studio sessions (from the Disney+ special) [deluxe edition]\n34\n2020\n2\n9\n3.06\n4.92\n3.96\n\n\nevermore (deluxe version)\n17\n2021\n3\n6\n3.01\n5.25\n4.06\n\n\nFearless (Taylor’s Version)\n26\n2021\n3\n0\n3.16\n5.20\n4.10\n\n\nRed (Taylor’s Version)\n30\n2021\n5\n2\n3.22\n10.22\n4.36\n\n\nMidnights\n13\n2022\n1\n6\n2.75\n4.27\n3.40\n\n\nMidnights (3am Edition)\n20\n2022\n1\n6\n2.48\n4.34\n3.47\n\n\nMidnights (The Til Dawn Edition)\n23\n2023\n3\n9\n2.48\n4.34\n3.50"
  },
  {
    "objectID": "posts/eRas/index.html#albums-and-metrics",
    "href": "posts/eRas/index.html#albums-and-metrics",
    "title": "the eras touR",
    "section": "Albums and Metrics",
    "text": "Albums and Metrics\nEach album defines an era. What defines the album? Let’s find out.\nFirst, to make things a little bit easier, you ought to know that I am collapsing albums. That is, even though there are 2, 3, sometimes 4 versions of each album (looking at you Midnights w/ less Lana, medium Lana, and more Lana), we will be looking at each album as a collection of all of the songs. This isn’t the best strategy, but it definitely makes my figures a lot nicer.\nEach album/era is defined by a color. Let’s define those here (courtesy of my best RA Dr. Gabrielle Pfund):\n■ Taylor Swift\n■ Fearless\n■ Speak Now\n■ Red\n■ 1989\n■ reputation\n■ Lover\n■ folklore\n■ evermore\n■ Midnights\n\nalbum_colors <- c(\n  `Taylor Swift` = \"#99FFCC\",\n  `Fearless` = \"#FFCC66\",\n  `Speak Now` = \"#CC66FF\",\n  `Red` = \"#990000\",\n  `1989` = \"#99FFFF\",\n  `reputation` = \"#000000\",\n  `Lover` = \"#FF99FF\",\n  `folklore` = \"#CCCCCC\",\n  `evermore` = \"#FFCC99\",\n  `Midnights` = \"#000066\")\n\n\nDanceability\n\nswifty |>  \n  ggplot(aes(y = fct_reorder(album_name, album_release_year),\n             x = danceability, fill = album_name)) + \n  stat_slab() +\n  scale_y_discrete(labels = label_wrap(20)) +\n  labs(x = \"Distribution of Song Danceability\", y = NULL) +\n  scale_fill_manual(values=album_colors) + \n  guides(fill = \"none\", color = \"none\") + \n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nKey\n???\n\n\nLoudness\n\nswifty |>  \n  ggplot(aes(y = fct_reorder(album_name, album_release_year),\n             x = loudness, fill = album_name)) + \n  stat_slab() +\n  scale_y_discrete(labels = label_wrap(20)) +\n  labs(x = \"Distribution of Song Loudness\", y = NULL) +\n  scale_fill_manual(values=album_colors) + \n  guides(fill = \"none\", color = \"none\") + \n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nMode\n???\n\n\nSpeechiness\n\nswifty |>  \n  ggplot(aes(y = fct_reorder(album_name, album_release_year),\n             x = speechiness, fill = album_name)) + \n  stat_slab() +\n  scale_y_discrete(labels = label_wrap(20)) +\n  labs(x = \"Distribution of Song Speechiness\", y = NULL) +\n  scale_fill_manual(values=album_colors) + \n  guides(fill = \"none\", color = \"none\") + \n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nAcousticness\n\nswifty |>  \n  ggplot(aes(y = fct_reorder(album_name, album_release_year),\n             x = acousticness, fill = album_name)) + \n  stat_slab() +\n  scale_y_discrete(labels = label_wrap(20)) +\n  labs(x = \"Distribution of Song Acousticness\", y = NULL) +\n  scale_fill_manual(values=album_colors) + \n  guides(fill = \"none\", color = \"none\") + \n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nInstrumentalness\n\n\nLiveness\n\nswifty |>  \n  ggplot(aes(y = fct_reorder(album_name, album_release_year),\n             x = liveness, fill = album_name)) + \n  stat_slab() +\n  scale_y_discrete(labels = label_wrap(20)) +\n  labs(x = \"Distribution of Song Liveness\", y = NULL) +\n  scale_fill_manual(values=album_colors) + \n  guides(fill = \"none\", color = \"none\") + \n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nValence\n\nswifty |>  \n  ggplot(aes(y = fct_reorder(album_name, album_release_year),\n             x = valence, fill = album_name)) + \n  stat_slab() +\n  scale_y_discrete(labels = label_wrap(20)) +\n  labs(x = \"Distribution of Song Valence\", y = NULL) +\n  scale_fill_manual(values=album_colors) + \n  guides(fill = \"none\", color = \"none\") + \n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\ntempo\n\nswifty |>  \n  ggplot(aes(y = fct_reorder(album_name, album_release_year),\n             x = tempo, fill = album_name)) + \n  stat_slab() +\n  scale_y_discrete(labels = label_wrap(20)) +\n  labs(x = \"Distribution of Song Tempo\", y = NULL) +\n  scale_fill_manual(values=album_colors) + \n  guides(fill = \"none\", color = \"none\") + \n  theme_minimal()"
  },
  {
    "objectID": "posts/eRas/index.html#taylors-version-vs.-not-taylors-version",
    "href": "posts/eRas/index.html#taylors-version-vs.-not-taylors-version",
    "title": "the eras touR",
    "section": "Taylor’s Version vs. Not(?) Taylor’s Version",
    "text": "Taylor’s Version vs. Not(?) Taylor’s Version\nFor my next bit of exploration, I’m wondering how much a difference Taylor made in how Taylory Taylor is.\nFirst, let’s add a boolean that tells us if a song is Taylor’s Version. Dirty data problem 1 of ???: tick marks vs. apostrophes. And this is why we use unicode, friends.\n\nswifty <- swifty |> \n  mutate(isTV = str_detect(track_name, \"Taylor's Version|Taylor’s Version\")) \n\nNow that we have TV as it’s own variable, we can make our data one step closer to some sort of normal form by making sure that track name contains one and only one type of information: the track name.\n\n\n\n\n\n\nTip: stringr\n\n\n\nStringr is one of my favorite tools in the tidyverse, especially for dealing with any sort of text data. Here I used:\n\nstr_remove() to remove (Taylor’s Version) from song titles to better group them later\nstr_squish() to remove any whitespace from the start and end, and reduce any double spaces within a song to a single space\nstr_to_lower() is the cute little sister of str_to_upper() and converts characters to lowercase\nstr_replace_all() replaces all of the target string (in this case all punctuation) with the replacement string (in this case nothingness)\n\n\n\n\nswifty <- swifty |> \n  mutate(track_name = str_remove(track_name, \"\\\\(Taylor's Version\\\\)|\\\\(Taylor’s Version\\\\)\"),\n         track_name = str_squish(track_name),\n         track_name = str_to_lower(track_name),\n         track_name = str_replace_all(track_name, \"[[:punct:]]\", \"\"))\n\nNow we can grab just our songs that have a TV and a no-TV.\n\nsongs_with_tvs <- swifty |> \n  group_by(track_name) |> \n  summarize(n = n(),\n            hasTV = sum(isTV)) |> \n  filter(n > 1 & hasTV > 0)\n\nLet’s take a look at danceability first. Looks like there is a general trend for Taylor’s Version of songs to be less danceable.\n\n\n\n\n\n\nNote\n\n\n\nNote: Apparently it would require fundamental changes to ggplot2 (according to Sir Hadley), so we cannot use album colors for each facet label without some super hacky workarounds. Maybe ggplot3 will serve us better.\n\n\n\nswifty |> \n  filter(track_name %in% songs_with_tvs$track_name) |> \n  group_by(track_name, isTV, Album = album_name) |> \n  summarize(danceability = mean(danceability)) |> \n  ggplot(aes(x = isTV, y = danceability, group = track_name, color = Album)) +\n  scale_color_manual(values=album_colors) + \n  geom_point() + \n  geom_line(method = \"lm\") + \n  facet_grid(~Album) +\n  labs(x = \"Taylor's Version\") + \n  theme_minimal() + \n  guides(color = \"none\") + \n  theme(strip.background.x = element_rect(fill=\"gray95\")) # this is where I wish fill would take a list of colors \n\n\n\n\n\nEnergy\n\nswifty |> \n  filter(track_name %in% songs_with_tvs$track_name) |> \n  group_by(track_name, isTV, Album = album_name) |> \n  summarize(energy = mean(energy)) |> \n  ggplot(aes(x = isTV, y = energy, group = track_name, color = Album)) +\n  scale_color_manual(values=album_colors) + \n  geom_point() + \n  geom_line(method = \"lm\") + \n  facet_grid(~Album) +\n  labs(x = \"Taylor's Version\") + \n  theme_minimal() + \n  guides(color = \"none\") + \n  theme(strip.background.x = element_rect(fill=\"gray95\")) # this is where I wish fill would take a list of colors \n\n\n\n\n\n\nLoudness\n\nswifty |> \n  filter(track_name %in% songs_with_tvs$track_name) |> \n  group_by(track_name, isTV, Album = album_name) |> \n  summarize(loudness = mean(loudness)) |> \n  ggplot(aes(x = isTV, y = loudness, group = track_name, color = Album)) +\n  scale_color_manual(values=album_colors) + \n  geom_point() + \n  geom_line(method = \"lm\") + \n  facet_grid(~Album) +\n  labs(x = \"Taylor's Version\") + \n  theme_minimal() + \n  guides(color = \"none\") + \n  theme(strip.background.x = element_rect(fill=\"gray95\")) # this is where I wish fill would take a list of colors \n\n\n\n\n\n\nValence\n\nswifty |> \n  filter(track_name %in% songs_with_tvs$track_name) |> \n  group_by(track_name, isTV, Album = album_name) |> \n  summarize(valence = mean(valence)) |> \n  ggplot(aes(x = isTV, y = valence, group = track_name, color = Album)) +\n  scale_color_manual(values=album_colors) + \n  geom_point() + \n  geom_line(method = \"lm\") + \n  facet_grid(~Album) +\n  labs(x = \"Taylor's Version\") + \n  theme_minimal() + \n  guides(color = \"none\") + \n  theme(strip.background.x = element_rect(fill=\"gray95\")) # this is where I wish fill would take a list of colors \n\n\n\n\n\nReferences:\nwhile I’m pretty confident in my brain’s ability to store endless lyrics, this website made possible all of the lyrics and references found throughout this project"
  },
  {
    "objectID": "posts/cable/index.html",
    "href": "posts/cable/index.html",
    "title": "9-month-olds’ Word Processing and Home Language Environment",
    "section": "",
    "text": "With Jill Lany and Abbie Thompson, I explored potential predictors of infants’ lexical processing efficiency. Stay tuned for our article, coming soon in 2023!"
  },
  {
    "objectID": "posts/hypothesis/index.html",
    "href": "posts/hypothesis/index.html",
    "title": "Conversation Starters in a Social Annotation Environment",
    "section": "",
    "text": "Using NLP and machine learning methods, I’m exploring student and instructor comments on course materials annotated using Hypothes.is to determine the features of primary-level comments that lead to productive dialogue among peers."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Here are some snippets of my work projects and my in-depth personal projects, tutorials, and blog.\n\n\n\n\n\n\n\n\n  \n\n\n\n\nthe eras touR\n\n\n\n\n\n\n\nfun\n\n\n\n\n\n\n\n\n\n\n\nJun 29, 2023\n\n\nJayde Homer\n\n\n\n\n\n\n  \n\n\n\n\n9-month-olds’ Word Processing and Home Language Environment\n\n\n\n\n\n\n\nwork\n\n\n\n\n\n\n\n\n\n\n\nJun 29, 2023\n\n\nJayde Homer\n\n\n\n\n\n\n  \n\n\n\n\nConversation Starters in a Social Annotation Environment\n\n\n\n\n\n\n\nwork\n\n\n\n\n\n\n\n\n\n\n\nMar 20, 2023\n\n\nJayde Homer\n\n\n\n\n\n\n  \n\n\n\n\nUnderstanding Patterns in Preschoolers’ Spellings\n\n\n\n\n\n\n\ngrad school\n\n\n\n\n\n\n\n\n\n\n\nAug 1, 2022\n\n\nJayde Homer\n\n\n\n\n\n\n  \n\n\n\n\nParameterized Reports for Department Use of Ed. Tech.\n\n\n\n\n\n\n\nwork\n\n\n\n\n\n\n\n\n\n\n\nJun 1, 2022\n\n\nJayde Homer\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hi, I’m Jayde!",
    "section": "",
    "text": "I have always loved consuming stories and solving puzzles. Unfortunately, neither of those pay my dog’s dermatology bills or the rent. Unless…\ndata is the puzzle and I tell its story.\nYou’re probably here because you want to know more about what I’m up to. You can head over to my Projects for a quick overview of my current academic projects and check out my blog, where I play around with fun data, explain parts of my process, and answer questions about things I’m personally interested in; you might learn something about Taylor Swift, birds, books, dogs, or a cool package in R. Have fun exploring and don’t hesitate to reach out with questions, job offers, or fun conversations!"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Hi, I’m Jayde!",
    "section": "Experience",
    "text": "Experience\nGraduate Student Researcher | Rebecca Treiman and Brett Kessler | studying patterns in children and adults’ spelling\nEd. Tech. Data Fellow | Sally Wu at Wash U’s Center for Teaching and Learning | exploring faculty, staff, and students’ use of licensed educational technologies\nTeacher | currently tutor stats with R | taught developmental psychology course and assisted in 10+ courses\nEtc | potpourri of life experiences in food service, warehousing, transportation, healthcare finance, and childcare industries"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Hi, I’m Jayde!",
    "section": "Education",
    "text": "Education\nBS | Brain & Cognitive Sciences | University of Rochester\nBA | Linguistics | University of Rochester\nMA | Psychological & Brain Sciences | Washington University in St. Louis\nPhD | Psychological & Brain Sciences | Washington University in St. Louis | ABD\nEtc | Certificate in Quantitative Analysis (Wash U); SQL Server & Databases (LaunchCode)"
  },
  {
    "objectID": "zaya.html",
    "href": "zaya.html",
    "title": "Zaya",
    "section": "",
    "text": "World’s best pup."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "jaydeblogs",
    "section": "",
    "text": "putting random stuff here"
  },
  {
    "objectID": "about.html#ideas",
    "href": "about.html#ideas",
    "title": "jaydeblogs",
    "section": "Ideas",
    "text": "Ideas\nHere are some of my ideas:\n\nusing APIs\ngoodreads analyses\nspotify analyses\ntwitter + letterboxd + rotten tomatoes analyses\n\nadd CV/resume\nadd"
  }
]