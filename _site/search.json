[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Me",
    "section": "",
    "text": "Hi, my name is Jayde. I have always loved consuming stories and solving puzzles. Unfortunately, neither of those pay the bills. Unless…\ndata is the puzzle and I tell its story."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Welcome",
    "section": "",
    "text": "This is me learning how to write a blog using quarto. Much of this was developed based on this."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "jaydeblogs",
    "section": "",
    "text": "putting random stuff here"
  },
  {
    "objectID": "posts/post-with-code/index.html#ideas",
    "href": "posts/post-with-code/index.html#ideas",
    "title": "Welcome",
    "section": "Ideas",
    "text": "Ideas\nHere are some of my ideas:\n\nusing APIs\ngoodreads analyses\nspotify analyses\ntwitter + letterboxd + rotten tomatoes analyses"
  },
  {
    "objectID": "posts/post-with-code/index.html#why-am-i-doing-this",
    "href": "posts/post-with-code/index.html#why-am-i-doing-this",
    "title": "Welcome",
    "section": "Why am I doing this?",
    "text": "Why am I doing this?\nSomeone at a conference recommended I do because when they hire data scientists, they like to see that applicants have blogs. Is that not a good enough reason? Also it could be fun for me."
  },
  {
    "objectID": "about.html#about-me",
    "href": "about.html#about-me",
    "title": "About",
    "section": "About me",
    "text": "About me\nI’m Jayde, a PhD candidate and data fellow at Washington University in Saint Louis. When I wear my PhD hat in the Reading and Language Lab, I’m advised by Rebecca Treiman, working closely with Brett Kessler, where we study (very generally) patterns in children and adults’ spelling. When I wear my data fellow hat, I explore the university’s usage of educational technologies with Sally Wu at the Center for Teaching and Learning.\nI use this site to communicate what I do for work and play, as well as share tools or tricks that some floundering R learner might stumble upon some day and find mildly helpful. If you’re that floundering R learner, don’t worry, we’ve all been there; you’ll get through this error just in time for a new one to yell at you.\nIf you’re interested in more, please do hesitate to get in touch (unless you want to offer me a job, in which case, see here and here). I’m probably busy being overcommitted to things and really just wanting to read novels and catch up on Oscar nominations."
  },
  {
    "objectID": "about.html#ideas",
    "href": "about.html#ideas",
    "title": "jaydeblogs",
    "section": "Ideas",
    "text": "Ideas\nHere are some of my ideas:\n\nusing APIs\ngoodreads analyses\nspotify analyses\ntwitter + letterboxd + rotten tomatoes analyses\n\nadd CV/resume\nadd"
  },
  {
    "objectID": "about.html#why-am-i-doing-this",
    "href": "about.html#why-am-i-doing-this",
    "title": "About",
    "section": "Why am I doing this?",
    "text": "Why am I doing this?\nWhile I should probably be walking my dog or writing my dissertation (don’t tell Becky!), someone at a conference recommended I do because when they hire data scientists, they like to see that applicants have blogs. Is that not a good enough reason? Also it could be fun for me."
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About Me",
    "section": "Experience",
    "text": "Experience\nI work with Rebecca Treiman and Brett Kessler for 5 years studying children’s spelling patterns in children and adults’ spelling.\nI also work with Sally Wu at Wash U’s Center for Teaching and Learning where I explore the faculty, staff, and students’ use of licensed educational technologies.\nI teach stats with R as a private tutor."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Me",
    "section": "Education",
    "text": "Education\nI hold a Bachelor’s degrees in Brain & Cognitive Sciences and Linguistics (University of Rochester), a Master’s degree in Psychology, (almost) a PhD in Psychology (Washington University in St. Louis)."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "CV/Contact",
    "section": "",
    "text": "LinkedIn\nemail: jayde dot homer at gmail dot com\ncv here"
  },
  {
    "objectID": "zaya.html",
    "href": "zaya.html",
    "title": "Zaya",
    "section": "",
    "text": "World’s best pup."
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "About Me",
    "section": "Experience",
    "text": "Experience\nI work with Rebecca Treiman and Brett Kessler for 5 years studying children’s spelling patterns in children and adults’ spelling.\nI also work with Sally Wu at Wash U’s Center for Teaching and Learning where I explore the faculty, staff, and students’ use of licensed educational technologies.\nI teach stats with R as a private tutor."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "About Me",
    "section": "Education",
    "text": "Education\nI hold a Bachelor’s degrees in Brain & Cognitive Sciences and Linguistics (University of Rochester), a Master’s degree in Psychology, (almost) a PhD in Psychology (Washington University in St. Louis).\nYou can find my stuff here:\nCV/resume button"
  },
  {
    "objectID": "index.html#ideas",
    "href": "index.html#ideas",
    "title": "About Me",
    "section": "Ideas",
    "text": "Ideas\nHere are some of my ideas:\n\nusing APIs\ngoodreads analyses\nspotify analyses\ntwitter + letterboxd + rotten tomatoes analyses\npages I want to make:\n\nCV\nposts\npresentations\nprojects\ncontact\n\n\nAny questions?"
  },
  {
    "objectID": "index.html#current-projects",
    "href": "index.html#current-projects",
    "title": "About Me",
    "section": "Current Projects",
    "text": "Current Projects\n\nUnderstanding Patterns in Preschoolers’ Spellings\nIn my dissertation I am…\n\n\nParameterized Reports for Department Use of Ed. Tech.\nI’ll describe that here…"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Here are some of my projects.\n\n\n\n\n\n\n\n\n  \n\n\n\n\nthe eras touR\n\n\n\n\n\n\n\nabout\n\n\n\n\n\n\n\n\n\n\n\nJun 6, 2023\n\n\nJayde Homer\n\n\n\n\n\n\n  \n\n\n\n\nThis can also be a post\n\n\n\n\n\n\n\nabout\n\n\n\n\n\n\n\n\n\n\n\nMar 28, 2023\n\n\nJayde Homer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis can be a post\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 28, 2023\n\n\nJayde Homer\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/eRas/index.html",
    "href": "posts/eRas/index.html",
    "title": "the eras touR",
    "section": "",
    "text": "Can I ask you a question? Have you ever wondered which of Taylor Swift’s songs are the most danceable? Which songs are saddest? Slowest? Lowest? Well, if the answer is no, you’re playing a stupid game and you’ve won a stupid prize – leave now. Assuming the answer to any of those questions was an incredibly enthusiastic YES, then you’re the lucky one.\nSo, R you ready for it?\nDISCLAIMER: Obviously I’m a very busy important person so I’m not going to answer ALL of your questions today, but I’ll try my very best to keep coming back and working on this, so please come back and check it out.\nHere are the packages we’ll be using.\n\n#install.packages(\"spotifyr\")\n#install.packages(\"httr\")\n\nlibrary(spotifyr)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(knitr)\nlibrary(httr)\n\nUsing (Spotify’s Web API)[https://developer.spotify.com/documentation/web-api], we can access all sorts of fun information about an artist. If you’re following along at home and wondering if this is the explicit version with all those Xs below, no. I’m just avoiding giving you my super secret client_id and client_secret. You can get your own by visiting your Spotify developer dashboard.\n\n#Sys.setenv(SPOTIFY_CLIENT_ID = 'XXXXXXXXXXXX')\n#Sys.setenv(SPOTIFY_CLIENT_SECRET = 'XXXXXXXXXXXX')\naccess_token <- get_spotify_access_token()\nswifty <- get_artist_audio_features('taylor swift')\n\nTo give you an idea of the sort of information we now have at our fingertips, here’s an example row of data, for our (yes, probably you) favorite song:\n\nswifty |> \n  filter(track_name == \"All Too Well (10 Minute Version) (Taylor's Version) (From The Vault)\") \n\n   artist_name              artist_id               album_id album_type\n1 Taylor Swift 06HL4z0CvFAxyc27GXpf02 6kZ42qRrzov54LcAk4onW9      album\n                                                                                                                                                                                                                      album_images\n1 640, 300, 64, https://i.scdn.co/image/ab67616d0000b273318443aab3531a0558e79a4d, https://i.scdn.co/image/ab67616d00001e02318443aab3531a0558e79a4d, https://i.scdn.co/image/ab67616d00004851318443aab3531a0558e79a4d, 640, 300, 64\n  album_release_date album_release_year album_release_date_precision\n1         2021-11-12               2021                          day\n  danceability energy key loudness mode speechiness acousticness\n1        0.631  0.518   0   -8.771    1      0.0303        0.274\n  instrumentalness liveness valence  tempo               track_id\n1                0    0.088   0.205 93.023 5enxwA8aAbwZbf5qCHORXi\n                                                      analysis_url\n1 https://api.spotify.com/v1/audio-analysis/5enxwA8aAbwZbf5qCHORXi\n  time_signature\n1              4\n                                                                                                                                                                                                 artists\n1 https://api.spotify.com/v1/artists/06HL4z0CvFAxyc27GXpf02, 06HL4z0CvFAxyc27GXpf02, Taylor Swift, artist, spotify:artist:06HL4z0CvFAxyc27GXpf02, https://open.spotify.com/artist/06HL4z0CvFAxyc27GXpf02\navailable_markets\n1 AR, AU, AT, BE, BO, BR, BG, CA, CL, CO, CR, CY, CZ, DK, DO, DE, EC, EE, SV, FI, FR, GR, GT, HN, HK, HU, IS, IE, IT, LV, LT, LU, MY, MT, MX, NL, NZ, NI, NO, PA, PY, PE, PH, PL, PT, SG, SK, ES, SE, CH, TW, TR, UY, US, GB, AD, LI, MC, ID, JP, TH, VN, RO, IL, ZA, SA, AE, BH, QA, OM, KW, EG, MA, DZ, TN, LB, JO, PS, IN, BY, KZ, MD, UA, AL, BA, HR, ME, MK, RS, SI, KR, BD, PK, LK, GH, KE, NG, TZ, UG, AG, AM, BS, BB, BZ, BT, BW, BF, CV, CW, DM, FJ, GM, GE, GD, GW, GY, HT, JM, KI, LS, LR, MW, MV, ML, MH, FM, NA, NR, NE, PW, PG, WS, SM, ST, SN, SC, SL, SB, KN, LC, VC, SR, TL, TO, TT, TV, VU, AZ, BN, BI, KH, CM, TD, KM, GQ, SZ, GA, GN, KG, LA, MO, MR, MN, NP, RW, TG, UZ, ZW, BJ, MG, MU, MZ, AO, CI, DJ, ZM, CD, CG, IQ, LY, TJ, VE, ET, XK\n  disc_number duration_ms explicit\n1           1      613026     TRUE\n                                                track_href is_local\n1 https://api.spotify.com/v1/tracks/5enxwA8aAbwZbf5qCHORXi    FALSE\n                                                            track_name\n1 All Too Well (10 Minute Version) (Taylor's Version) (From The Vault)\n  track_preview_url track_number  type                            track_uri\n1                NA           30 track spotify:track:5enxwA8aAbwZbf5qCHORXi\n                                  external_urls.spotify             album_name\n1 https://open.spotify.com/track/5enxwA8aAbwZbf5qCHORXi Red (Taylor's Version)\n  key_name mode_name key_mode\n1        C     major  C major\n\n\nSome of the information is obvious, but others I had to do some exploring to learn more about. Let’s review:\ndanceability: Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.\nenergy: Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.\nkey: The key the track is in. Integers map to pitches using standard Pitch Class notation. E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on. If no key was detected, the value is -1. (https://en.wikipedia.org/wiki/Pitch_class). Key_mode is a more helpful interpretation for us.\nloudness: The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typically range between -60 and 0 db.\nmode: Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\nspeechiness: Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\nacousticness: A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.\ninstrumentalness: Predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\nliveness: Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.\nvalence: A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\ntempo: The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.\nOne very important piece of information that we are not allowed to access from Spotify, for some unknown but infuriating nonetheless reason, is playback or number of streams. We can get it for our own account (maybe I’ll do that another time), but not for all users ever. But….\nIt’s hard to fight when thе fight ain’t fair We’re getting stronger now, find things they never found They might be bigger but we’re faster and never scared\nSo, yes, we can get streaming info. It’s just a bit of an adventure into Wonderland! I found and subscribed to a potentially-sketchy web API… https://rapidapi.com/developer/dashboard\nNow, I can pull streaming/playback info (caveat, only for 20 songs per day). So, this project will take a while to complete for streaming info. Unless Spotify allows us to pull streaming info for songs some time soon, which is doubtful, I’ll keep using this API I’m now subscribed to.\nThe following code queries the database (tbd on when that playback info is backdated?) using the track_id.\n\n# queryString <- list(spotify_track_id = \"XXXXXXXXXX\")\n# \n# response <- VERB(\"GET\", \n#                  url, \n#                  query = queryString, \n#                  add_headers('X-RapidAPI-Key' = '19547ae2bdmsh4d5cd37c8c39d7fp1a033bjsnaa6639064938', \n#                              'X-RapidAPI-Host' = 'spotify-track-streams-playback-count1.p.rapidapi.com'),\n#                  content_type(\"application/octet-stream\"))\n\ntest for Lavender Haze\ntrack id = 24emu3sabKISjRkrys28jq\n\n# queryString <- list(spotify_track_id = \"24emu3sabKISjRkrys28jq\")\n# \n# # response <- VERB(\"GET\", \n# #                  url, \n# #                  query = queryString, \n# #                  add_headers('X-RapidAPI-Key' = '19547ae2bdmsh4d5cd37c8c39d7fp1a033bjsnaa6639064938', \n# #                              'X-RapidAPI-Host' = 'spotify-track-streams-playback-count1.p.rapidapi.com'),\n# #                  content_type(\"application/octet-stream\"))\n# \n# content(response, \"text\")\n\nWhich results in a text list containing (among other things) the track_id and stream number, which we can add to our file somewhat manually, like so:\n\n# track_plays[4, 3] <- content(response)[4][[1]]\n# track_plays[4, 4] <- date()\n\nOf course I’d prefer not to do that for 465 songs, so let’s loop that shit.\nFirst, we want to set up a subset for N tracks that we want to get playback info for, so we don’t break the bank ($.50 per additional API call after 20… that’s more money than I have in my bank account!!!). Then we send that subset into the loop, get playback info for the track, add plaayback info and the date it was accessed to our track_plays file, rinse and repeat.\n\n# url <- \"https://spotify-track-streams-playback-count1.p.rapidapi.com/tracks/spotify_track_streams\"\n# \n# no_plays <- track_plays |> \n#   filter(is.na(plays)) |> \n#   head(6)\n# \n# for(t in 1:nrow(no_plays)){\n#   track <- no_plays[t, 1]\n#   queryString <- list(spotify_track_id = track$track_id)\n#   response <- VERB(\"GET\",\n#                    url,\n#                    query = queryString,\n#                    add_headers('X-RapidAPI-Key' = '19547ae2bdmsh4d5cd37c8c39d7fp1a033bjsnaa6639064938',\n#                                'X-RapidAPI-Host' = 'spotify-track-streams-playback-count1.p.rapidapi.com'),\n#                    content_type(\"application/octet-stream\"))\n#   track_plays[which(track_plays$track_id==track$track_id), 3] <- content(response)[4][[1]]\n#   track_plays[which(track_plays$track_id==track$track_id), 4] <- date()\n# }\n\n# in case need to do a manual entry \n#track_plays[which(track_plays$track_id==\"0GKDhq6ZbmSbRHd3eyGlB7\"), 3] <- 229475778\n\nI then write this file out to a csv to store it after each day’s API access is maxed so I can read it in and add more data the next day (so long as I remember to do so). At this rate, it will take probably a month (if I am diligent and make minimal errors) to get all of the stream data in.\n\ntrack_plays\n\n# A tibble: 465 × 4\n   track_id               track_name                               plays date_…¹\n   <chr>                  <chr>                                    <dbl> <chr>  \n 1 24emu3sabKISjRkrys28jq Lavender Haze                           4.40e8 Thu Ju…\n 2 6qxvy9Pe4RJIq5JBVbbwbS Maroon                                 NA      Thu Ju…\n 3 5qIHFdkW6phMsTZlN2g8Lc Anti-Hero                              NA      Thu Ju…\n 4 7GA86Uo2jYbj8vIXe2nyWd Snow On The Beach (feat. Lana Del Rey)  3.01e8 Thu Ju…\n 5 6PQOU00xWNrGwCZzboriXy You're On Your Own, Kid                NA      Thu Ju…\n 6 4eKMqf9ZMSclDX7V9Ptg7x Midnight Rain                          NA      Thu Ju…\n 7 7oomkQSYf1ia2VnVEWfFIU Question...?                           NA      Thu Ju…\n 8 0GKDhq6ZbmSbRHd3eyGlB7 Vigilante Shit                         NA      Thu Ju…\n 9 0VpF6RLdCfPIeYRwMu4tZK Bejeweled                              NA      Thu Ju…\n10 4bBDkw2KBMX0tcgAaXC83Q Labyrinth                              NA      Thu Ju…\n# … with 455 more rows, and abbreviated variable name ¹​date_retrieved\n\n\n\nwrite.csv(track_plays, \"track_plays.csv\")\n\nTo bring it all full circle, we can also add track_plays to the swifty data!!!\n\nswifty <- left_join(swifty, track_plays, by = c(\"track_name\", \"track_id\"))\nglimpse(swifty)\n\nRows: 465\nColumns: 41\n$ artist_name                  <chr> \"Taylor Swift\", \"Taylor Swift\", \"Taylor S…\n$ artist_id                    <chr> \"06HL4z0CvFAxyc27GXpf02\", \"06HL4z0CvFAxyc…\n$ album_id                     <chr> \"1fnJ7k0bllNfL1kVdNVW1A\", \"1fnJ7k0bllNfL1…\n$ album_type                   <chr> \"album\", \"album\", \"album\", \"album\", \"albu…\n$ album_images                 <list> [<data.frame[3 x 3]>], [<data.frame[3 x …\n$ album_release_date           <chr> \"2023-05-26\", \"2023-05-26\", \"2023-05-26\",…\n$ album_release_year           <dbl> 2023, 2023, 2023, 2023, 2023, 2023, 2023,…\n$ album_release_date_precision <chr> \"day\", \"day\", \"day\", \"day\", \"day\", \"day\",…\n$ danceability                 <dbl> 0.735, 0.650, 0.637, 0.653, 0.694, 0.654,…\n$ energy                       <dbl> 0.454, 0.397, 0.649, 0.331, 0.386, 0.372,…\n$ key                          <int> 7, 7, 4, 9, 2, 0, 7, 4, 7, 0, 8, 0, 4, 5,…\n$ loudness                     <dbl> -10.516, -8.237, -6.590, -13.534, -10.312…\n$ mode                         <int> 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,…\n$ speechiness                  <dbl> 0.0876, 0.0365, 0.0584, 0.0390, 0.0597, 0…\n$ acousticness                 <dbl> 0.2360, 0.0609, 0.1150, 0.7050, 0.4230, 0…\n$ instrumentalness             <dbl> 1.13e-03, 1.40e-06, 1.22e-06, 1.30e-03, 1…\n$ liveness                     <dbl> 0.1330, 0.0890, 0.1470, 0.1160, 0.1260, 0…\n$ valence                      <dbl> 0.0751, 0.0382, 0.4970, 0.1660, 0.3900, 0…\n$ tempo                        <dbl> 97.043, 108.055, 96.935, 110.014, 120.044…\n$ track_id                     <chr> \"24emu3sabKISjRkrys28jq\", \"6qxvy9Pe4RJIq5…\n$ analysis_url                 <chr> \"https://api.spotify.com/v1/audio-analysi…\n$ time_signature               <int> 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,…\n$ artists                      <list> [<data.frame[1 x 6]>], [<data.frame[1 x …\n$ available_markets            <list> <\"AR\", \"AU\", \"AT\", \"BE\", \"BO\", \"BR\", \"BG…\n$ disc_number                  <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ duration_ms                  <int> 202395, 218270, 200690, 256124, 194206, 1…\n$ explicit                     <lgl> TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, TR…\n$ track_href                   <chr> \"https://api.spotify.com/v1/tracks/24emu3…\n$ is_local                     <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,…\n$ track_name                   <chr> \"Lavender Haze\", \"Maroon\", \"Anti-Hero\", \"…\n$ track_preview_url            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ track_number                 <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13…\n$ type                         <chr> \"track\", \"track\", \"track\", \"track\", \"trac…\n$ track_uri                    <chr> \"spotify:track:24emu3sabKISjRkrys28jq\", \"…\n$ external_urls.spotify        <chr> \"https://open.spotify.com/track/24emu3sab…\n$ album_name                   <chr> \"Midnights (The Til Dawn Edition)\", \"Midn…\n$ key_name                     <chr> \"G\", \"G\", \"E\", \"A\", \"D\", \"C\", \"G\", \"E\", \"…\n$ mode_name                    <chr> \"minor\", \"major\", \"major\", \"major\", \"majo…\n$ key_mode                     <chr> \"G minor\", \"G major\", \"E major\", \"A major…\n$ plays                        <dbl> 440003544, NA, NA, 300605971, NA, NA, NA,…\n$ date_retrieved               <chr> \"Thu Jun  8 14:59:43 2023\", \"Thu Jun  8 1…\n\n\n\nGiving credit where credit is VERY due:\nhttps://shaynak.github.io/taylor-swift/ – while I’m pretty confident in my brain’s ability to store endless lyrics, this website made possible all of the lyrics and references found throughout this project"
  }
]